{"ast":null,"code":"var _jsxFileName = \"/Users/madhusudhan/Desktop/dogBreedImages/src/components/dogBreedData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport LoadingSpinner from './loadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomDogImages = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchRandomImages = async () => {\n      try {\n        const breedResponse = await fetch('https://dog.ceo/api/breeds/list/all');\n        if (!breedResponse.ok) {\n          throw new Error('Failed to fetch dog breeds');\n        }\n        const breedData = await breedResponse.json();\n        const breedNames = Object.keys(breedData.message);\n        const imagePromises = breedNames.map(async breed => {\n          const imageResponse = await fetch(`https://dog.ceo/api/breed/${breed}/images/random`);\n          if (!imageResponse.ok) {\n            throw new Error(`Failed to fetch image for ${breed}`);\n          }\n          const imageData = await imageResponse.json();\n          return {\n            breed,\n            url: imageData.message\n          };\n        });\n        const fetchedImages = await Promise.all(imagePromises);\n        setImages(fetchedImages);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchRandomImages();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  ;\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random Dog Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n        gap: '20px'\n      },\n      children: images.map(({\n        breed,\n        url\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `${breed} dog`,\n          style: {\n            width: '100%',\n            borderRadius: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: breed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, breed, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomDogImages, \"Qvb4D8N0dNM7ZjkwssHCvlUN4UQ=\");\n_c = RandomDogImages;\nexport default RandomDogImages;\nvar _c;\n$RefreshReg$(_c, \"RandomDogImages\");","map":{"version":3,"names":["React","useEffect","useState","LoadingSpinner","jsxDEV","_jsxDEV","RandomDogImages","_s","images","setImages","loading","setLoading","error","setError","fetchRandomImages","breedResponse","fetch","ok","Error","breedData","json","breedNames","Object","keys","message","imagePromises","map","breed","imageResponse","imageData","url","fetchedImages","Promise","all","fileName","_jsxFileName","lineNumber","columnNumber","children","style","display","gridTemplateColumns","gap","textAlign","src","alt","width","borderRadius","_c","$RefreshReg$"],"sources":["/Users/madhusudhan/Desktop/dogBreedImages/src/components/dogBreedData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LoadingSpinner from './loadingSpinner';\n\nconst RandomDogImages = () => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchRandomImages = async () => {\n      try {\n        const breedResponse = await fetch('https://dog.ceo/api/breeds/list/all');\n        if (!breedResponse.ok) {\n          throw new Error('Failed to fetch dog breeds');\n        }\n        const breedData = await breedResponse.json();\n        const breedNames = Object.keys(breedData.message);\n\n        const imagePromises = breedNames.map(async (breed) => {\n          const imageResponse = await fetch(`https://dog.ceo/api/breed/${breed}/images/random`);\n          if (!imageResponse.ok) {\n            throw new Error(`Failed to fetch image for ${breed}`);\n          }\n          const imageData = await imageResponse.json();\n          return { breed, url: imageData.message };\n        });\n\n        const fetchedImages = await Promise.all(imagePromises);\n        setImages(fetchedImages);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchRandomImages();\n  }, []);\n\n  if (loading) return <LoadingSpinner />;;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>Random Dog Images</h2>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '20px' }}>\n        {images.map(({ breed, url }) => (\n          <div key={breed} style={{ textAlign: 'center' }}>\n            <img src={url} alt={`${breed} dog`} style={{ width: '100%', borderRadius: '10px' }} />\n            <p>{breed}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RandomDogImages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}